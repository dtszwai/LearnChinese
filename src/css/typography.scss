@use "variables" as v;

@font-face {
  font-family: WenKai;
  src: url(/src/font/WenKai.ttf);
  font-display: swap;
}
@font-face {
  font-family: KaiTi;
  src: url(/src/font/KaiTi.woff2);
  font-display: swap;
}

@font-face {
  font-family: Zihun67;
  src: url(/src/font/Zihun67.ttf);
  font-display: swap;
}

@font-face {
  font-family: SmallCaps;
  src: url(/src/font/Fontin-SmallCaps.otf);
  font-display: swap;
}

@font-face {
  font-family: "Inter var";
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("/src/font/InterVar.woff2") format("woff2");
  font-named-instance: "Regular";
}

// 正文展現樣式
.markdown {
  & > p {
    line-height: 30px;
    font-size: 17px;
  }

  .main {
    font-size: 1.7rem;
    font-family: KaiTi, DFKai-SB, KaiU, STKaiti, Serif;
    margin: 1.8rem 0;
    counter-reset: paragraph;

    &.prose {
      text-align: justify;
      line-height: 1.7;
      &:not([data-paragraph="true"]) {
        text-indent: 2em;
      }
    }

    &.poetry {
      font-family: WenKai;
      text-indent: 0;
      line-height: 2;
      text-align: center;

      & p {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        max-width: 100%;
      }
    }
  }

  & [data-paragraph="true"] > p::before,
  span.paragraph::before {
    display: block;
    text-transform: uppercase;
    color: var(--ifm-font-color-base);
    text-align: center;
    font: 1.5rem "Cabin Sketch";
    font-weight: var(--ifm-heading-font-weight);
    line-height: var(--ifm-heading-line-height);
    margin-bottom: var(--ifm-heading-margin-bottom);
    counter-increment: paragraph;
    content: "-" counter(paragraph) "-";
  }
}

.read-around {
  font-size: 1.2em;
  text-align: justify;
  text-indent: 2em;

  &.poetry {
    font-family: WenKai;
    text-align: center;
    text-indent: 0;
    line-height: 2 !important;
    word-break: keep-all;
    text-overflow: ellipsis;
  }
}

// 文章來源樣式
.source {
  color: v.$source-text-color;
  text-align: right;
  margin-bottom: 1.5rem;
  display: block;
  html[data-theme="dark"] & {
    color: v.$source-text-color-dark;
  }
}

.language-txt {
  margin-bottom: var(--ifm-leading);
  border-radius: var(--ifm-global-radius);
  box-shadow: var(--ifm-global-shadow-lw);
  [class^="codeBlockTitle"],
  [class^="codeBlockLines"] span {
    color: rgb(57, 58, 52);
    html[data-theme="dark"] & {
      color: rgb(191, 199, 213);
    }
  }
  &,
  [class^="codeBlockTitle"],
  [class^="codeBlockLines"] {
    background-color: rgb(246, 248, 250);
    html[data-theme="dark"] & {
      background-color: rgb(41, 45, 62);
    }
  }
  [class^="codeBlockTitle"] {
    border-bottom: 1px solid var(--ifm-color-emphasis-300);
    padding: 0.75rem var(--ifm-pre-padding);
    font-family: "SmallCaps";
  }
  [class^="codeBlockLines"] {
    padding: var(--ifm-pre-padding);
    span {
      font-family: "Palatino";
      line-height: var(--ifm-pre-line-height);
    }
  }
}

.markdown {
  code {
    background-color: #99a1b31a;
    border: 0;
    border-radius: var(--ifm-code-border-radius);
    font-family: inherit;
    font-size: 1em;
    padding: 1px 0.25rem;
    vertical-align: unset;
  }
}

.KeepAll {
  word-break: keep-all;
  text-overflow: ellipsis;
}
